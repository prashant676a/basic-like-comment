.bg-gray-100.p-4.rounded-lg.shadow-sm.mb-4
  /! Comment Body and Author Name
  .flex.flex-col.space-y-2
    p.text-gray-700= comment.body
    p.text-gray-500.text-sm
      | - #{comment.user.name}
    /! Display the comment author's name
  - if user_signed_in?
    .flex.items-center.space-x-4.mt-2
      /! Likes Count
      p.text-gray-700
        = comment.likes.count
        = (comment.likes.count) == 1 ? 'Like' : 'Likes'
      /! Like/Unlike Button
      - if comment.likes.exists?(user_id: current_user.id)
        = button_to 'Unlike', post_comment_like_path(@post, comment, comment.likes.find_by(user: current_user)), \
          method: :delete,                                                                                       \
          data: { turbo_method: :delete },                                                                       \
          class: "bg-red-500 text-white px-4 py-2 rounded-md shadow-md hover:bg-red-600"                         
      - else
        = button_to 'Like', post_comment_likes_path(@post, comment),                       \
          method: :post,                                                                   \
          data: { turbo_method: :post },                                                   \
          class: "bg-blue-500 text-white px-4 py-2 rounded-md shadow-md hover:bg-blue-600" 
  - else
    p.mt-2.text-blue-600= link_to 'Sign in to like', new_user_session_path
  /! Edit and Delete links for the comment author
  - if comment.user == current_user
    .flex.items-center.space-x-2.mt-4
      = link_to 'Edit', edit_post_comment_path(comment.commentable, comment), class: 'text-blue-600 hover:text-blue-800 font-semibold'
      span
      = link_to 'Delete', post_comment_path(comment.commentable, comment), \
        data: { turbo_method: :delete },                                   \
        class: 'text-red-600 hover:text-red-800 font-semibold'
